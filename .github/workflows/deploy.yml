name: Auto Deploy MyWeb via Cloudflare Tunnel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Cloudflared (needed for SSH via Zero Trust)
      - name: Install Cloudflared
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      # Setup SSH key (private key from GitHub Secrets)
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      # Authenticate Cloudflare Access (Service Token)
      - name: Authenticate Cloudflare Access
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_CLIENT_SECRET }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "ðŸ”‘ Authenticating Cloudflare Access Token..."
          cloudflared access token \
            --app=https://${VPS_HOST} \
            --id=$CF_ACCESS_CLIENT_ID \
            --secret=$CF_ACCESS_CLIENT_SECRET || true
          echo "âœ… Cloudflare Access authenticated."

      # SSH into VPS through Cloudflare Tunnel and deploy
      - name: Deploy to VPS via Cloudflare Tunnel
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_CLIENT_SECRET }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "Starting deployment via Cloudflare Access Tunnel..."

          ssh -o StrictHostKeyChecking=no \
              -o ProxyCommand="cloudflared access ssh \
              --hostname $VPS_HOST \
              --id $CF_ACCESS_CLIENT_ID \
              --secret $CF_ACCESS_CLIENT_SECRET" \
              -i ~/.ssh/id_ed25519 \
              $VPS_USER@$VPS_HOST << 'EOF'

          echo "Connected to VPS via Cloudflare Access Tunnel"

          cd /var/www/myweb
          echo "Pulling latest changes from GitHub..."
          git pull origin main

          echo "Rebuilding Docker containers..."
          docker compose down
          docker compose up -d --build

          echo "Deployment complete!"
          EOF
