name: Deploy My Web App via Cloudflare Tunnel

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout kode
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install cloudflared
      - name: Install Cloudflared
        run: |
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      # 3Ô∏è‚É£ Setup SSH Key
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      # 4Ô∏è‚É£ Login ke Cloudflare Zero Trust (Service Token)
      - name: Authenticate Cloudflare Access
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_CLIENT_SECRET }}
        run: |
          echo "Logging in to Cloudflare Access..."
          cloudflared access token --id $CF_ACCESS_CLIENT_ID --secret $CF_ACCESS_CLIENT_SECRET --url https://${{ secrets.VPS_HOST }}
          echo "‚úÖ Cloudflare Access authenticated successfully"

      # 5Ô∏è‚É£ Deploy ke VPS via Cloudflare Tunnel
      - name: Deploy to VPS via Cloudflare Tunnel (Authenticated)
        env:
          CF_ACCESS_CLIENT_ID: ${{ secrets.CF_CLIENT_ID }}
          CF_ACCESS_CLIENT_SECRET: ${{ secrets.CF_CLIENT_SECRET }}
        run: |
          ssh -o StrictHostKeyChecking=no \
              -o ProxyCommand="cloudflared access ssh --hostname ${{ secrets.VPS_HOST }} \
              --id $CF_ACCESS_CLIENT_ID \
              --secret $CF_ACCESS_CLIENT_SECRET" \
              -i ~/.ssh/id_ed25519 \
              ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'

          echo "‚úÖ Connected to VPS via Cloudflare Access Tunnel"
          cd /var/www/myweb

          echo "üì¶ Pulling latest changes from GitHub..."
          git pull origin main

          echo "üß± Rebuilding Docker containers..."
          docker compose down
          docker compose up -d --build

          echo "üöÄ Deployment complete!"
          EOF
